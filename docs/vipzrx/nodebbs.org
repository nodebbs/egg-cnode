* [[file:nodebbs-vipzrx-todo.org][nodebbs-vipzrx-todo]]
[[file:linux%E4%B8%8B%E6%98%BE%E7%A4%BA%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6.org][linux下显示隐藏文件]]
[[file:github%20commit%E6%8F%90%E4%BA%A4%E4%B9%B1%E7%A0%81.org][github commit提交乱码]]
[[file:lfs-egg-cnode.org][lfs-egg-cnode含义]] 
[[file:nodebbs-aboutme.org][nodebbs-aboutme]]  
[[file:travis-ci%E9%9B%86%E6%88%90%E6%95%99%E7%A8%8B.org][travis-ci集成教程]] 
[[file:pros-and-cons-about-nodejs.org][pros-and-cons-about-nodejs]]
magithub的配置,可以针对单个repo吗?
每个repo对应一个帐号
类似git的分层配置
或者支持切换github帐号吗?

 这个是nodebbs网站的about页面
对应https://cnodejs.org/about
使用路由about

ln '/home/kk/nut/nodebbs_nodebbs-blog/docs/vipzrx/readme.org' '/home/kk/nut/nodebbs_nodebbs-blog/.github'

硬链接形式.现在主要是自己整理,先链接到自己名字目录下的readme文件.以后有人参与进来了,链接再修改成一个面向国人的适合引导说明的readme

emacs编辑之后,硬链接会失效?

** 建立硬链接方便同一更新文件
#+BEGIN_SRC 
➜  ~ ln '/mnt/h21t/soft/soft_github/nodebbs_egg-cnode/docs/vipzrx/README.org' '/mnt/h21t/soft/soft_github/nodebbs_egg-cnode/.github'

#+END_SRC

** debian安装docker
*** debian安装docker
https://docs.docker.com/install/linux/docker-ce/debian/#set-up-the-repository
按照这个教程安装

执行到这里

Use the following command to set up the stable repository. You always need the stable repository, even if you want to install builds from the edge or test repositories as well. To add the edge or test repository, add the word edge or test (or both) after the word stable in the commands below.

```
$ sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/debian \
   $(lsb_release -cs) \
```

软件源中,也添加了

```
➜  ~ tail /etc/apt/sources.list
tail /etc/apt/sources.list
deb http://mirrors.ustc.edu.cn/debian stretch-proposed-updates main contrib non-free
deb-src http://mirrors.ustc.edu.cn/debian stretch-proposed-updates main contrib non-free

#jenkins
deb https://pkg.jenkins.io/debian binary/
#virtualbox
deb https://download.virtualbox.org/virtualbox/debian stretch contrib
deb [arch=amd64] https://download.docker.com/linux/debian stretch stable
# deb-src [arch=amd64] https://download.docker.com/linux/debian stretch stable
# deb-src [arch=amd64] https://download.docker.com/linux/debian stretch stable
➜  ~ 
```

执行apt update时候,一直无法链接
```
➜  ~ sudo apt update
sudo apt update
Ign:1 http://mirrors.ustc.edu.cn/debian stretch InRelease
Hit:2 http://mirrors.ustc.edu.cn/debian stretch-proposed-updates InRelease
Hit:3 http://mirrors.ustc.edu.cn/debian stretch Release
Ign:4 http://dl.google.com/linux/chrome/deb stable InRelease
Get:5 http://packages.microsoft.com/repos/vscode stable InRelease [2,801 B]
Hit:6 http://dl.google.com/linux/chrome/deb stable Release
Hit:9 https://download.virtualbox.org/virtualbox/debian stretch InRelease
Hit:10 http://deb.debian.org/debian stretch-backports InRelease
Ign:11 https://pkg.jenkins.io/debian binary/ InRelease
Hit:12 https://pkg.jenkins.io/debian binary/ Release
Err:14 https://download.docker.com/linux/debian stretch InRelease
  Operation timed out after 120000 milliseconds with 0 out of 0 bytes received
Fetched 2,801 B in 2min 0s (23 B/s)
Reading package lists... Done
Building dependency tree       
Reading state information... Done
All packages are up to date.
W: Failed to fetch https://download.docker.com/linux/debian/dists/stretch/InRelease  Operation timed out after 120000 milliseconds with 0 out of 0 bytes received
W: Some index files failed to download. They have been ignored, or old ones used instead.
```

使用proxychain4 也是无法链接

```
➜  ~ proxychains4  sudo apt update
< sudo apt update
[proxychains] config file found: /home/kk/.proxychains/proxychains.conf
[proxychains] preloading /usr/lib/libproxychains4.so
Ign:1 http://mirrors.ustc.edu.cn/debian stretch InRelease
Get:2 http://mirrors.ustc.edu.cn/debian stretch-proposed-updates InRelease [96.3 kB]
Ign:3 http://dl.google.com/linux/chrome/deb stable InRelease
Hit:4 http://mirrors.ustc.edu.cn/debian stretch Release
Hit:5 http://dl.google.com/linux/chrome/deb stable Release
Get:6 http://packages.microsoft.com/repos/vscode stable InRelease [2,801 B]
Get:8 http://deb.debian.org/debian stretch-backports InRelease [91.8 kB]
Hit:10 https://download.virtualbox.org/virtualbox/debian stretch InRelease
Ign:11 https://pkg.jenkins.io/debian binary/ InRelease
Hit:12 https://pkg.jenkins.io/debian binary/ Release
Err:14 https://download.docker.com/linux/debian stretch InRelease
  Operation timed out after 120000 milliseconds with 0 out of 0 bytes received
Fetched 99.1 kB in 2min 0s (825 B/s)
Reading package lists... Done
Building dependency tree       
Reading state information... Done
All packages are up to date.
W: Failed to fetch https://download.docker.com/linux/debian/dists/stretch/InRelease  Operation timed out after 120000 milliseconds with 0 out of 0 bytes received
W: Some index files failed to download. They have been ignored, or old ones used instead.
```

浏览器中
https://download.docker.com/linux/debian/dists/stretch/ 这个文件可以访问

换成中科大的软件源就可以了
http://mirrors.ustc.edu.cn/help/docker-ce.html

https://www.jianshu.com/p/34d3b4568059
几个软件源的对比
最后还是用了中科大的
http://mirrors.ustc.edu.cn/help/dockerhub.html

debian默认没有配置文件,新建一个
➜  ~ sudo touch /etc/docker/daemon.json

在配置文件 /etc/docker/daemon.json 中加入：

{
  "registry-mirrors": ["https://docker.mirrors.ustc.edu.cn/"]
}

修改软件源为中科大
➜  ~ sudo nano /etc/apt/sources.list

重启docker
➜  ~ sudo service docker restart
*** 安装docker-compose
https://docs.docker.com/compose/install/#install-compose

https://github.com/docker/compose/releases
最新版本

https://docs.docker.com/compose/reference/
命令行工具

curl使用代理
下载github上的东西,不使用代理速度很慢,使用代理之后,速度很快

curl: (56) Proxy CONNECT aborted
#+BEGIN_SRC 
➜  ~ sudo curl -x 127.0.0.1:1080 -L https://github.com/docker/compose/releases/download/1.21.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
curl: (56) Proxy CONNECT aborted
#+END_SRC
-x支持的时http代理 使用ss的socks 

下载docker-compose 
#+BEGIN_SRC 
➜  ~ proxychains4 sudo curl -L https://github.com/docker/compose/releases/download/1.21.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose 
[proxychains] config file found: /home/kk/.proxychains/proxychains.conf
[proxychains] preloading /usr/lib/libproxychains4.so
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   617    0   617    0     0    374      0 --:--:--  0:00:01 --:--:--   375
100 10.3M  100 10.3M    0     0  1513k      0  0:00:07  0:00:07 --:--:-- 2637k

#+END_SRC

添加可执行权限
#+BEGIN_SRC 
➜  ~ sudo chmod +x /usr/local/bin/docker-compose
#+END_SRC

配置自动补全,使用zsh

查看安装版本
#+BEGIN_SRC 
➜  ~ docker-compose --version
docker-compose version 1.21.0, build 5920eb0

#+END_SRC

*** docker-compose的自动补全插件
https://docs.docker.com/compose/completion/#zsh

新建插件目录
➜  ~ mkdir -p ~/.zsh/completion

下载zsh自动补全插件
#+BEGIN_SRC 
➜  ~ proxychains4 curl -L https://raw.githubusercontent.com/docker/compose/1.21.0/contrib/completion/zsh/_docker-compose > ~/.zsh/completion/_docker-compose
[proxychains] config file found: /home/kk/.proxychains/proxychains.conf
[proxychains] preloading /usr/lib/libproxychains4.so
[proxychains] DLL init: proxychains-ng 4.12-git-15-gbb30d86
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0[proxychains] Strict chain  ...  127.0.0.1:1080  ...  raw.githubusercontent.com:443  ...  OK
100 19036  100 19036    0     0  13781      0  0:00:01  0:00:01 --:--:-- 13784

#+END_SRC

Include the directory in your $fpath by adding in ~/.zshrc:

在~/.zshrc众添加
fpath=(~/.zsh/completion $fpath)

Make sure compinit is loaded or do it by adding in ~/.zshrc

autoload -Uz compinit && compinit -i

重新加载shell

exec $SHELL -l


Place the completion script in your /path/to/zsh/completion (typically ~/.zsh/completion/):

$ mkdir -p ~/.zsh/completion
$ curl -L https://raw.githubusercontent.com/docker/compose/1.21.0/contrib/completion/zsh/_docker-compose > ~/.zsh/completion/_docker-compose

Include the directory in your $fpath by adding in ~/.zshrc:
fpath=(~/.zsh/completion $fpath)

Make sure compinit is loaded or do it by adding in ~/.zshrc:

autoload -Uz compinit && compinit -i

Then reload your shell:

exec $SHELL -l

可以补全的选项

Available completions
Depending on what you typed on the command line so far, it completes:

available docker-compose commands

options that are available for a particular command
service names that make sense in a given context, such as services with running or stopped instances or services based on images vs. services based on Dockerfiles. For docker-compose scale, completed service names automatically have “=” appended.
arguments for selected options. For example, docker-compose kill -s completes some signals like SIGHUP and SIGUSR1.
Enjoy working with Compose faster and with less typos!
*** 使用非root用户管理docker
https://docs.docker.com/install/linux/linux-postinstall/
*** tutorials/Docker.md
* 修改自动编译
* 在本地部署docker
* 本地搭建cnodejs
* vscode安装
安装常用插件
